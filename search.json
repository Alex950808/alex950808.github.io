[{"title":"Freenom自动续期","url":"/posts/b337ab6a/","content":"\n### 🌿 项目地址\n\n{% note orange 'fa-solid fa-file-code' %}\n  主仓库：[freenom](https://github.com/luolongfei/freenom)\n  备用仓库：[next-freenom](https://github.com/luolongfei/next-freenom)\n{% endnote %}\n\n### 🎉 部署\n{% tabs freenew-deploy %}\n\n<!-- tab 通过 Docker 部署 @fa-brands fa-docker -->\n*如果你有自己的服务器，这是最推荐的部署方式。*\n\nDocker 仓库地址为： [https://hub.docker.com/r/luolongfei/freenom](https://hub.docker.com/r/luolongfei/freenom) ，同样欢迎 star 。\n此镜像支持的架构为`linux/amd64`，`linux/arm64`，`linux/ppc64le`，`linux/s390x`，`linux/386`，`linux/arm/v7`，`linux/arm/v6`， 理论上支持`群晖`\n、`威联通`、`树莓派`以及各种类型的`VPS`。\n\n<details>\n    <summary>安装 Docker</summary>\n<br>\n\n*以 root 用户登录，执行一键脚本安装 Docker*\n\n{% tabs linux-version %}\n\n<!-- tab Debian / Ubuntu @fa-brands fa-ubuntu -->\n```shell\n# 升级源并安装软件\napt-get update && apt-get install -y wget vim\n# 执行命令自动安装 Docker\nwget -qO- get.docker.com | bash\n```\n<!-- endtab -->\n\n<!-- tab CentOS @fa-brands fa-centos -->\n```shell\n# 升级源并安装软件\nyum update && yum install -y wget vim\n# 执行命令自动安装 Docker\nwget -qO- get.docker.com | bash\n```\n<!-- endtab -->\n\n{% endtabs  %}\n\n{% note info %}\n说明：请使用 KVM 架构的 VPS，OpenVZ 架构的 VPS 不支持安装 Docker，另外 CentOS 8 不支持用此脚本来安装 Docker。 更多关于 Docker\n安装的内容参考 [Docker 官方安装指南](https://docs.docker.com/engine/install/) 。\n{% endnote %}\n\n*启动 `Docker` 服务*\n\n```shell\n# 启动 Docker 服务\nsystemctl start docker\n# 查看 Docker 运行状态\nsystemctl status docker\n# 将 Docker 服务加入开机自启动\nsystemctl enable docker\n```\n\n</details>\n\n<details>\n    <summary>通过 Docker 部署域名续期脚本</summary>\n<br>\n\n**用 `Docker` 创建并启动容器**\n\n命令如下\n\n```shell\ndocker run -d --name freenom --restart always -v $(pwd):/conf -v $(pwd)/logs:/app/logs luolongfei/freenom\n```\n\n自定义脚本执行时间，命令如下\n\n```shell\ndocker run -d --name freenom --restart always -v $(pwd):/conf -v $(pwd)/logs:/app/logs -e RUN_AT=\"11:24\" luolongfei/freenom\n```\n\n上面这条命令只比上上条命令多了个` -e RUN_AT=\"11:24\"`，其中`11:24`表示在北京时间每天的 11:24 执行续期任务，你可以自定义这个时间。 这里的`RUN_AT`参数同时也支持 CRON\n命令里的时间形式，比如，` -e RUN_AT=\"9 11 * * *\"`，表示每天北京时间 11:09 执行续期任务， 如果你不想每天执行任务，只想隔几天执行，只用修改`RUN_AT`的值即可。\n\n**注意：不推荐自定义脚本执行时间。因为你可能跟很多人定义的是同一个时间点，这样可能导致所有人都是同一时间向 Freenom 的服务器发起请求， 使得 Freenom 无法稳定提供服务。而如果你不自定义时间，程序会自动指定北京时间 06 ~ 23 点全时段随机的一个时间点作为执行时间， 每次重启容器都会自动重新指定。**\n\n至此，你的自动续期容器就跑起来了，执行`ls -a`后你就可以看到在你的当前目录下，有一个`.env`文件和一个`logs`目录，`logs`目录里面存放的是程序日志， 而`.env`则是配置文件，现在直接执行`vim .env`\n将`.env`文件里的所有配置项改为你自己的并保存即可。然后重启容器，如果配置正确的话，便很快可以收到相关邮件。\n\n> 如何验证你的配置是否正确呢？\n>\n\n修改并保存`.env`文件后，执行`docker restart freenom`重启容器，等待 5 秒钟左右，然后执行`docker logs freenom`查看输出内容， 观察输出内容中有`执行成功`\n字样，则表示配置无误。如果你还来不及配置送信邮箱等内容，可先停用邮件功能。\n\n> 如何升级到最新版或者重新部署呢？\n>\n\n在`.env`所在目录，执行`docker rm -f freenom`删除现有容器，然后再执行 `docker rmi -f luolongfei/freenom`\n删除旧的镜像，然后再执行上面的 `docker run -d --name freenom --restart always -v $(pwd):/conf -v $(pwd)/logs:/app/logs luolongfei/freenom`\n重新部署即可，这样部署后就是最新的代码了。当然，新版对应的`.env`文件可能有变动，不必担心，程序会自动更新`.env`文件内容，并将已有的配置迁移过去。\n\n一句话操作，即在`.env`文件所在目录下执行以下命令，即可完成更新升级：\n\n```shell\ndocker rm -f freenom && docker rmi -f luolongfei/freenom && docker run -d --name freenom --restart always -v $(pwd):/conf -v $(pwd)/logs:/app/logs luolongfei/freenom\n```\n</details>\n\n<details>\n    <summary>Docker 命令的参数解释</summary>\n<br>\n\n| 命令               | 含义                                                                                                                                                          |\n| :----------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| docker run         | 开始运行一个容器                                                                                                                                              |\n| -d 参数            | 容器以后台运行并输出容器 ID                                                                                                                                   |\n| --name 参数        | 给容器分配一个识别符，方便将来的启动，停止，删除等操作                                                                                                        |\n| --restart 参数     | 配置容器启动类型，always 即为 docker 服务重新启动时自动启动本容器                                                                                             |\n| -v 参数            | 挂载卷（volume），冒号后面是容器的路径，冒号前面是宿主机的路径（只支持绝对路径），`$(pwd)`表示当前目录，如果是 Windows 系统，则可用`${PWD}`替换此处的`$(pwd)` |\n| -e 参数            | 指定容器中的环境变量                                                                                                                                          |\n| luolongfei/freenom | 这是从 docker hub 下载回来的镜像完整路径名                                                                                                                    |\n\n</details>\n\n<details>\n    <summary>后期容器管理以及 Docker 常用命令</summary>\n<br>\n\n```shell\n# 查看容器在线状态及大小\ndocker ps -as\n\n# 查看容器的运行输出日志\ndocker logs freenom\n\n# 重新启动容器\ndocker restart freenom\n\n# 停止容器的运行\ndocker stop freenom\n\n# 移除容器\ndocker rm -f freenom\n\n# 查看 docker 容器占用 CPU，内存等信息\ndocker stats --no-stream\n\n# 查看 Docker 安装版本等信息\ndocker version\n\n# 重启 Docker进程\nsystemctl restart docker\n```\n\n</details>\n\n<!-- endtab -->\n\n<!-- tab 🚈 通过 Railway 部署 -->\n\n*推荐没有自己服务器的用户使用此方案。*\n\n{% note blue 'fas fa-train' %}\n\n注意不要尝试注册多个 railway 账户，因为 railway 有比较严格的风控策略，并且每个 railway 账户都必须绑定一个注册超过 6 个月的 GitHub 账户才能正常使用。除非你有多个完全不同的本地环境和 ip，并且永远不在同一个环境里登录多个账户。\n\n{% endnote %}\n\n- 首先 fork 本仓库，后面会通过你 fork 的仓库部署\n- 注册 [Railway](https://railway.app/) 的账户，注册成功后登录\n- 访问 [Railway](https://railway.app/account) 绑定你的 GitHub 账户（不能是新 GitHub 账户，注册必须超过 6 个月才能绑定）\n- 访问 [Railway](https://railway.app/new) ，选择`Deploy from GitHub repo`，这里会提醒你授权 Railway 访问你的仓库，授权后便可以点选你在第 1 步中 fork 的仓库，然后点`Deploy Now`，等待部署完成\n- 部署完成后，点击`Variables`，然后点击`RAW Editor`批量添加环境变量配置,将 `.env.example` 文件里的所有内容复制到编辑框（或者只复制你需要修改的，未修改的项将保持默认），并将配置内容改为你自己的，然后点击`Update Variables`即可完成配置，配置变更后，Railway 会自动重建容器，等待容器重建完成\n- 容器重建完成后，点击`Deployments`，然后点击`View Logs`查看构建日志，如果日志里没有错误，则说明你成功了\n\n*注：如果你想自定义脚本的执行时间，可以在添加环境变量的时候，额外加一个名为RUN_AT的环境变量，值可以是北京时间（例如11:24）或者 cron 表达式*\n\n<!-- endtab -->\n\n<!-- tab 🧊 通过 Heroku 部署 -->\n\n*由于休眠问题以及 Cron 问题还没有比较完美的解决方案，故暂时不推荐通过这种方式部署。*\n\n点击下方按钮，可以一键部署到 Heroku，不过由于 Heroku 免费版本每 30 分钟休眠，你可以将创建的 app 地址交给 [https://kaffeine.herokuapp.com](https://kaffeine.herokuapp.com/) ，让它每隔一段时间就 ping 一下你的地址，使得你的容器保持唤醒状态。而 Heroku 容器每个月最多只能清醒 500 个小时，所以还是会面临休眠问题。除非你验证信用卡以获取 1000 小时运行时长。\n\n**注意，Heroku 还有个不太好处理的问题，在容器内部似乎不能正常使用 Cron 计划任务，可能跟每次由不同用户启动容器，且每次容器都位于不同的机器有关。只能使用 Heroku 提供的调度器，很不灵活，或者借助代码实现与 Cron 类似的功能。参考：**\n\n> [https://stackoverflow.com/a/2611936](https://stackoverflow.com/a/2611936)\n> \n> [https://medartus.medium.com/how-to-use-cron-on-heroku-for-free-778d8602a622](https://medartus.medium.com/how-to-use-cron-on-heroku-for-free-778d8602a622)\n\n[![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy)\n\n<!-- endtab -->\n\n<!-- tab 通过源码部署 @fa-solid fa-code -->\n\n- 获取源码修改配置\n```shell\n# 创建文件夹\ncd && mkdir -p /freenom && cd /freenom\n# clone 仓库源码\ngit clone https://github.com/luolongfei/freenom.git ./\n# 复制配置文件模板\ncp .env.example .env\n```\n- 添加计划任务\n```shell\n# 安装 crontabs 以及 cronie\nyum -y install cronie crontabs\n# 验证 crond 是否安装及启动\nyum list cronie && systemctl status crond\n# 验证crontab是否安装\nyum list crontabs $$ which crontab && crontab -l\n# 编辑任务列表，添加定时任务，每天早上 9点 执行\ncrontab -e\n# 追加一行 `00 09 * * * cd /freenom/ && php run > freenom_crontab.log 2>&1`\n# 重启crond守护进程使任务生效\nsystemctl restart crond\n\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n\n\n### 📪 配置送信功能\n\n{% note green 'fa-solid fa-circle-info' %}\n\n此处会分别介绍`邮件送信` / `Telegram Bot` / `企业微信` / `Server 酱` / `Bark`送信方式的配置方法，以及其所需的资料，你可以任选一种送信方式进行配置，直接跳到对应的文档查看即可。 如果你是 IOS\n用户，推荐使用 `Bark`送信方式，其它平台的用户根据自己喜好选择可接受的送信方式即可。不太推荐使用`Server 酱`送信，`Server 酱`每日送信条数的限制，以及需要开会员才能直接看到送信内容，否则需要跳到 `Server 酱`网站才能查看内容，都是不推荐的原因。同样的配置完全可以直接使用`企业微信`送信方式，`企业微信`送信直接在普通微信客户端就能看到信件内容。\n\n{% endnote %}\n\n{% tabs freenom-push %}\n\n<!-- tab 邮件送信 @fa-solid fa-envelope -->\n\n> 修改`.env`文件，将`MAIL_USERNAME`和`MAIL_PASSWORD`设置为你的邮箱和密码（或令牌），将`TO`设置为你的收信邮箱，然后将`MAIL_ENABLE`的值设为`1`以启用邮箱送信功能。\n> \n> 上面介绍了三种邮箱的设置方法，如果你不想使用邮件送信，将根目录下的`.env`文件中的`MAIL_ENABLE`的值改为`0`即可关闭邮件推送方式。\n\n<!-- endtab -->\n\n<!-- tab Telegram Bot @fa-brands fa-telegram -->\n\n- 将.env文件中的TELEGRAM_BOT_ENABLE的值改为1，即可启用 Telegram Bot 送信功能\n- 在 Telegram 客户端中搜索@userinfobot，并打开聊天窗口\n- 发送/start给@userinfobot即可以获取自己的 Id，将.env文件中的TELEGRAM_CHAT_ID的值改为前面获取到的 Id\n- 在 Telegram 客户端中搜索@BotFather，并打开聊天窗口\n- 发送/newbot给@BotFather，然后根据提示创建，创建完成后根据图示操作获取token\n- 将.env文件中的TELEGRAM_BOT_TOKEN的值改为上一步获取的token值\n- 在 Telegram 客户端中搜索你创建的机器人的账户，上面示例中机器人账户为@fat_tiger_bot，请替换为你自己的。找到机器人账户并打开聊天对话框，点击聊天输入框中的 /start 按钮或者直接给机器人发送 /start，以启用机器人\n- （可选）为 Telegram Bot 设置代理。针对国内网络环境，可将.env文件中的TELEGRAM_PROXY的值改为代理值，具体参考.env文件中的注释\n\n<!-- endtab -->\n\n<!-- tab 企业微信 @fa-brands fa-weixin -->\n- 在电脑上打开 https://work.weixin.qq.com ，注册一个企业。注册的过程需要填的信息，腾讯已经做了详尽的说明，根据提示操作即可\n- 注册成功后，会跳到注册成功画面，点击页面最下方的进入管理后台按钮，将打开管理后台画面\n- 在管理后台，点击应用管理，然后往下翻，在自建部分找到并点击创建应用\n- 创建应用，应用名称随意，注意下面的可见范围选公司名，以使得公司下的所有人可见\n- 应用创建完成后，会跳到应用详情页面，在详情页面，你可以拿到AgentId和Secret的值， 在.env文件中，将WECHAT_AGENT_ID的值改为这里拿到的 AgentId 的值，将WECHAT_CORP_SECRET的值改为这里拿到的Secret的值\n> 注意，此处要查看Secret的值的话，需要先安装企业微信 app，点击发送后会在企业微信 app客户端收到Secret的值，将值记录下来后，便可以卸载企业微信 app，然后记得将 .env 文件中的WECHAT_CORP_SECRET的值改为这里拿到的Secret的值\n- 获取企业 ID，并将.env文件中WECHAT_CORP_ID的值改为企业 ID的值\n- 推送消息到微信客户端。在管理后台点击我的企业，再点击微信插件，接着往下翻，找到邀请关注部分的二维码，用微信扫码关注即可,不要勾选 `成员使用微信插件时需要使用企业微信客户端`\n- 将.env文件中的WECHAT_ENABLE的值改为1，以启用微信推送功能\n<!-- endtab -->\n\n<!-- tab Bark 送信 @fa-solid fa-message-arrow-up -->\n\n*Bark 是一款 IOS 端用于推送自定义通知的 app，是个人开发者在维护，项目地址为 https://github.com/Finb/Bark ，客户端和服务端均开源。*\n- 前往 App Store 搜索Bark并安装\n- 打开Bark app，点击注册设备，记得允许通知，然后点击`服务器`就可以看到，`https://api.day.app/`BARK_KEY`/这里改成你自己的推送内容`，请将.env文件中的BARK_KEY的值设为此处获取的值\n- 将.env文件中的BARK_ENABLE的值设为1，以启用Bark送信功能\n\n<!-- endtab -->\n\n{% endtabs %}\n\n### 💖 配置文件\n\n| 变量名              | 含义               | 默认值 | 是否必须 | 备注 |\n| -------------------- | ------------------ | ------ | ------ | ------ |\n| FREENOM_USERNAME     | Freenom 账户       | -    | 是 | 只支持邮箱账户，如果你是使用第三方社交账户登录的用户，请在 Freenom 管理页面绑定邮箱，绑定后即可使用邮箱账户登录 |\n| FREENOM_PASSWORD     | Freenom 密码       | -    | 是 | 某些特殊字符可能需要转义，详见`.env`文件内注释 |\n| MULTIPLE_ACCOUNTS    | 多账户支持         | -    | 否 | 多个账户和密码的格式必须是“`<账户1>@<密码1>\\|<账户2>@<密码2>\\|<账户3>@<密码3>`”，注意不要省略“<>”符号，否则无法正确匹配。如果设置了多账户，上面的`FREENOM_USERNAME`和`FREENOM_PASSWORD`可不设置 |\n| FREENOM_PROXY        | Freenom 代理       | -    | 否 | e.g. http://127.0.0.1:1081 or socks5://127.0.0.1:1080 |\n| MAIL_USERNAME        | 机器人邮箱账户      | -    | 否 | 支持`Gmail`、`QQ邮箱`、`163邮箱`以及`Outlook邮箱` |\n| MAIL_PASSWORD        | 机器人邮箱密码      | -    | 否 | `Gmail`填应用专用密码，`QQ邮箱`或`163邮箱`填授权码 |\n| TO                   | 接收通知的邮箱      | -    | 否 | 你自己最常用的邮箱，用来接收机器人邮箱发出的域名相关邮件 |\n| MAIL_ENABLE          | 是否启用邮件推送功能 | `0` | 否 | `1`：启用<br>`0`：不启用<br>默认不启用，如果设为`1`，启用邮件推送功能，则上面的`MAIL_USERNAME`、`MAIL_PASSWORD`、`TO`变量变为必填项 |\n| MAIL_HOST            | SMTP 服务器         | -    | 否 | e.g. smtp.gmail.com |\n| MAIL_PORT            | SMTP 端口号         | -    | 否 | 一般是 587 或者 465 |\n| MAIL_ENCRYPTION      | 邮件加密方式        | -    | 否 | 一般是 tls 或者 ssl 或者 starttls |\n| Telegram bot | - | - | - | - |\n| TELEGRAM_CHAT_ID     | 你的`chat_id`      | - | 否 | 通过发送`/start`给`@userinfobot`可以获取自己的`id` |\n| TELEGRAM_BOT_TOKEN   | 你的`Telegram bot`的`token` | - |    否    |  |\n| TELEGRAM_BOT_ENABLE  | 是否启用`Telegram Bot`推送功能 | `0` | 否 | `1`：启用<br>`0`：不启用<br>默认不启用，如果设为`1`，则必须设置上面的`TELEGRAM_CHAT_ID`和`TELEGRAM_BOT_TOKEN`变量 |\n| TELEGRAM_PROXY       | Telegram 代理      | -    | 否 | e.g. http://127.0.0.1:1081 or socks5://127.0.0.1:1080 |\n| CUSTOM_TELEGRAM_HOST | 自建 Telegram 反向代理地址      | api.telegram.org | 否 | 保持默认即可 |\n| WECHAT_CORP_ID       | 企业 ID | - | 否 | 企业微信的企业 ID |\n| WECHAT_CORP_SECRET   | 应用的凭证密钥 | - | 否 | 企业微信的应用凭证密钥 |\n| WECHAT_AGENT_ID      | 应用 ID | `1` | 否 | 企业微信的应用 ID |\n| WECHAT_ENABLE        | 是否启用企业微信送信功能 | `0` | 否 | `1`：启用<br>`0`：不启用<br>默认不启用 |\n| SCT_SEND_KEY         | Server 酱的 SendKey | - | 否 | Server 酱的 SendKey |\n| SCT_ENABLE           | 是否启用 Server 酱 送信功能 | `0` | 否 | `1`：启用<br>`0`：不启用<br>默认不启用 |\n| BARK_KEY             | Bark key     | - | 是 | Bark key |\n| BARK_URL             | Bark 域名     | https://api.day.app | 是 | Bark 域名，默认是 Bark 作者提供的服务 |\n| BARK_IS_ARCHIVE      | Bark 固定配置 | - | 是 | Bark 固定配置 |\n| BARK_GROUP           | Bark 固定配置 | FreeNom | 是 | Bark 固定配置 |\n| BARK_LEVEL           | Bark 固定配置 | active | 是 | Bark 固定配置 |\n| BARK_ICON            | Bark 固定配置 | https://q2.qlogo.cn/headimg_dl?dst_uin=593198779&spec=100 | 是 | Bark 固定配置 |\n| BARK_JUMP_URL        | Bark 固定配置 | - | 是 | Bark 固定配置 |\n| BARK_SOUND           | Bark 固定配置 | gotosleep | 是 | Bark 固定配置 |\n| BARK_ENABLE          | 是否启用 Server 酱 送信功能 | `0` | 否 | `1`：启用<br>`0`：不启用<br>默认不启用 |\n| NOTICE_FREQ          | 通知频率 | `1` | 否 | `0`：仅当有续期操作的时候<br>`1`：每次执行 |\n| VERIFY_SSL           | 是否验证服务器证书 | `0` | 否 | `1`验证<br> `0`：不验证 |\n| DEBUG                | 是否开启 Debug 模式 | `0` | 否 | `1`：开启<br> `0`：关闭 |\n| NEW_VERSION_DETECTION | 检测是否有新版本可用，发现新版本时推送消息通知 | `1` | 否 | `1`：开启<br> `0`：关闭 |\n| CUSTOM_LANGUAGE      | 应用语言配置 | zh | 否 | 应用语言配置 |\n| SHOW_SERVER_INFO     | 送信时是否显示服务器信息 | `0` | 否 | `1`：显示<br> `0`：不显示 |\n\n**更多配置项含义，请参考 [.env.example](https://github.com/luolongfei/freenom/raw/main/.env.example) 文件中的注释。**\n","tags":["其他","Freenom"],"categories":["其他"]},{"title":"Cloudflare Workers 反向代理和负载均衡","url":"/posts/3c136da5/","content":"\n{% note green 'fa-solid fa-hammer' %}\n`Cloudflare Workers` 提供了一个无服务器执行环境，允许您创建全新的应用程序或扩充现有应用程序，而无需配置或维护基础架构。\n{% endnote %}\n\n## 注册登录\n> 准备一个邮箱,注册一个[CloudFlare](https://dash.cloudflare.com/sign-up)账号  \n> 登录[CloudFlare](https://dash.cloudflare.com/login)控制台\n\n## 创建Worker服务\n{% note green 'fa-solid fa-hammer' %}\n创建一个 `Worker` 通过代码实现反向代理和负载均衡，提升网站全球访问速度\n{% endnote %}\n\n### Worker代码\n{% tabs worker-setting %}\n<!-- tab 反向代理 -->\n```javascript\naddEventListener(\n  \"fetch\",event => {\n     let url=new URL(event.request.url);\n     url.hostname=\"github.com\";\n     let request=new Request(url,event.request);\n     event. respondWith(\n       fetch(request)\n     )\n  }\n)\n```\n<!-- endtab -->\n\n<!-- tab 负载均衡 -->\n```javascript\nconst servers = [\n  'github.com',\n  'gitee.com',\n  'gitlab.com',\n  'bitbucket.org',\n  'www.google.com'\n]\n\nasync function handleRequest(request) {\n  var url = new URL(request.url)\n  var d = Date.now();\n  url.hostname = servers[d%servers.length]\n  let response = await fetch(url, request)\n  return response;\n}\n\naddEventListener('fetch', event => {\n  event.respondWith(handleRequest(event.request))\n})\n```\n<!-- endtab -->\n{% endtabs %}","tags":["Cloudflare","负载均衡","Severless"],"categories":["其他"]},{"title":"hexo安装配置详细教程","url":"/posts/b8294efb/","content":"\n## Hexo简介\n{% note green 'fas fa-rocket' %}\n\n[Hexo](https://hexo.io/zh-cn/) 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n{% endnote %}\n\n***\n\n## 安装\n\n### 安装 Git\n- [官网下载安装](https://git-scm.com/download/win)   \n- [淘宝镜像下载安装](https://npm.taobao.org/mirrors/git-for-windows/)\n\n### 安装 Node.js\n- [官网下载安装](https://nodejs.org/en/download/)   \n- [淘宝镜像下载安装](https://npm.taobao.org/mirrors/node)\n\n### 安装 Hexo Cli 并初始化\n```bash\nnpm install -g hexo-cli\nhexo init hexo\ncd hexo\n```\n\n***\n\n## 安装 [Butterfly](https://butterfly.js.org/) 主题\n\n{% tabs butterfly-install %}\n\n<!-- tab Git安裝 (Github) @fab fa-github-square -->\n\n在你的 Hexo 根目錄裏\n```bash\ngit clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly\n```\n\n{% note info %}\n升級方法：在主題目錄下，運行 `git pull`\n{% endnote %}\n\n<!-- endtab -->\n\n<!-- tab Git安裝 (Gitee) @fab fa-git-square -->\n\n在你的 Hexo 根目錄裏\n```bash\ngit clone -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly\n```\n\n{% note info %}\n升級方法：在主題目錄下，運行 `git pull`\n{% endnote %}\n\n<!-- endtab -->\n\n<!-- tab npm安裝@fab fa-npm -->\n> 此方法只支持 Hexo 5.0.0 以上版本\n>\n> ***通過 npm 安裝並不會在 themes 裏生成主題文件夾，而是在 node_modules 裏生成***\n\n在你的 Hexo 根目錄裏\n```bash\nnpm install hexo-theme-butterfly\n```\n\n{% note info %}\n升級方法：在 Hexo `根目錄`下，運行 `npm update hexo-theme-butterfly`\n{% endnote %}\n\n<!-- endtab -->\n\n{% endtabs %}\n\n### 安装插件\n```bash\nnpm install hexo-renderer-pug hexo-renderer-stylus hexo-wordcount hexo-abbrlink hexo-generator-feed hexo-filter-nofollow hexo-generator-sitemap hexo-generator-baidu-sitemap hexo-generator-search hexo-deployer-git hexo-helper-live2d hexo-blog-encrypt --save\n```\n| 插件                         | 解釋                                 |\n| ---------------------------- | ----------------------------------  |\n| hexo-server                  | 服务器 |\n| hexo-renderer-pug            | 渲染器 |\n| hexo-renderer-stylus         | 渲染器 |\n| hexo-wordcount               | 字数统计 |\n| hexo-tag-aplayer             | APlayer 播放器 |\n| hexo-abbrlink                | 可以把鏈接permalink轉為數字的插件 |\n| hexo-generator-feed          | 生成RSS文件的插件 |\n| hexo-filter-nofollow         | 加強網站SEO和防止權重流失 |\n| hexo-generator-sitemap       | 生成sitemap的插件 |\n| hexo-generator-baidu-sitemap | 生成baidusitemap的插件 |\n| hexo-generator-search        | 本地搜索插件 |\n| hexo-algolia                 | Algolia 搜索插件1 |\n| hexo-algoliasearch           | Algolia 搜索插件2 |\n| hexo-helper-live2d           | live2d看板娘 |\n| hexo-blog-encrypt            | 博客加密插件 |\n\n\n\n### 修改主题配置_config.butterfly.yml\n```yaml\n# Main menu navigation (導航目錄)\n# see https://butterfly.js.org/posts/4aa8abbe/#導航菜單\n# --------------------------------------\n\nmenu:\n  首页: / || fas fa-home\n  时间轴: /archives/ || fas fa-archive\n  标签: /tags/ || fas fa-tags\n  分类: /categories/ || fas fa-folder-open\n  娱乐||fa fa-heartbeat:\n    图库: /gallery/ || fas fa-images\n  友链: /link/ || fas fa-link\n  关于: /about/ || fas fa-heart\n# rss: /atom.xml\n\n# Code Blocks (代碼相關)\n# --------------------------------------\n\nhighlight_theme: light #  darker / pale night / light / ocean / mac / mac light / false\nhighlight_copy: true # copy button\nhighlight_lang: true # show the code language\nhighlight_shrink: false # true: shrink the code blocks / false: expand the code blocks | none: expand code blocks and hide the button\nhighlight_height_limit: 400 # unit: px\ncode_word_wrap: false\n\n# copy settings\n# copyright: Add the copyright information after copied content (複製的內容後面加上版權信息)\ncopy:\n  enable: true\n  copyright:\n    enable: false\n    limit_count: 50\n\n# social settings (社交圖標設置)\n# formal:\n#   icon: link || the description\nsocial:\n  fab fa-github: https://github.com/Alex950808/ || Github\n  fa-solid fa-blog: https://www.cnblogs.com/hjpms/ || Cnblogs\n  fas fa-rss: /atom.xml || RSS\n\n# search (搜索)\n# see https://butterfly.js.org/posts/ceeb73f/#搜索系統\n# --------------------------------------\n\n# Algolia search\nalgolia_search:\n  enable: false\n  hits:\n    per_page: 6\n\n# Local search\nlocal_search:\n  enable: true\n  preload: false\n  CDN:\n\n# Math (數學)\n# --------------------------------------\n# About the per_page\n# if you set it to true, it will load mathjax/katex script in each page (true 表示每一頁都加載js)\n# if you set it to false, it will load mathjax/katex script according to your setting (add the 'mathjax: true' in page's front-matter)\n# (false 需要時加載，須在使用的 Markdown Front-matter 加上 mathjax: true)\n\n# MathJax\nmathjax:\n  enable: false\n  per_page: false\n\n# KaTeX\nkatex:\n  enable: false\n  per_page: false\n  hide_scrollbar: true\n\n# Image (圖片設置)\n# --------------------------------------\n\n# Favicon（網站圖標）\nfavicon: /img/favicon.png\n\n# Avatar (頭像)\navatar:\n  img: /img/avatar.png\n  effect: false\n\n# Disable all banner image\ndisable_top_img: false\n\n# The banner image of home page\nindex_img: https://api.dujin.org/pic/fengjing\n\n# If the banner of page not setting, it will show the top_img\ndefault_top_img: /img/top_img/index.jpg\n\n# The banner image of archive page\narchive_img: /img/top_img/archive.jpg\n\n# If the banner of tag page not setting, it will show the top_img\n# note: tag page, not tags page (子標籤頁面的 top_img)\ntag_img: /img/top_img/tag.png\n\n# The banner image of tag page\n# format:\n#  - tag name: xxxxx\ntag_per_img:\n\n# If the banner of category page not setting, it will show the top_img\n# note: category page, not categories page (子分類頁面的 top_img)\ncategory_img: /img/top_img/category.jpg\n\n# The banner image of category page\n# format:\n#  - category name: xxxxx\ncategory_per_img:\n\ncover:\n  # display the cover or not (是否顯示文章封面)\n  index_enable: true\n  aside_enable: true\n  archives_enable: true\n  # the position of cover in home page (封面顯示的位置)\n  # left/right/both\n  position: both\n  # When cover is not set, the default cover is displayed (當沒有設置cover時，默認的封面顯示)\n  default_cover:\n    - /img/cover/default_bg.png\n    - /img/cover/default_bg2.jpg\n    - /img/cover/default_bg3.jpg\n\n# Replace Broken Images (替換無法顯示的圖片)\nerror_img:\n  flink: /img/friend_404.gif\n  post_page: /img/404.jpg\n\n# A simple 404 page\nerror_404:\n  enable: true\n  subtitle: '页面没有找到'\n  background: /img/not_found.png\n\npost_meta:\n  page: # Home Page\n    date_type: created # created or updated or both 主頁文章日期是創建日或者更新日或都顯示\n    date_format: date # date/relative 顯示日期還是相對日期\n    categories: true # true or false 主頁是否顯示分類\n    tags: false # true or false 主頁是否顯示標籤\n    label: true # true or false 顯示描述性文字\n  post:\n    date_type: both # created or updated or both 文章頁日期是創建日或者更新日或都顯示\n    date_format: date # date/relative 顯示日期還是相對日期\n    categories: true # true or false 文章頁是否顯示分類\n    tags: true # true or false 文章頁是否顯示標籤\n    label: true # true or false 顯示描述性文字\n\n# wordcount (字數統計)\n# see https://butterfly.js.org/posts/ceeb73f/#字數統計\nwordcount:\n  enable: true\n  post_wordcount: true\n  min2read: true\n  total_wordcount: true\n\n# Display the article introduction on homepage\n# 1: description\n# 2: both (if the description exists, it will show description, or show the auto_excerpt)\n# 3: auto_excerpt (default)\n# false: do not show the article introduction\nindex_post_content:\n  method: 3\n  length: 500 # if you set method to 2 or 3, the length need to config\n\n# anchor\n# when you scroll in post, the URL will update according to header id.\nanchor: false\n\n# Post\n# --------------------------------------\n\n# toc (目錄)\ntoc:\n  post: true\n  page: false\n  number: true\n  expand: false\n  style_simple: false # for post\n\npost_copyright:\n  enable: true\n  decode: false\n  author_href:\n  license: CC BY-NC-SA 4.0\n  license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/\n\n# Sponsor/reward\nreward:\n  enable: true\n  QR_code:\n    - img: /img/wechat.jpg\n      link:\n      text: 微信\n    - img: /img/alipay.jpg\n      link:\n      text: 支付宝\n\n# Post edit\n# Easily browse and edit blog source code online.\npost_edit:\n  enable: false\n  # url: https://github.com/user-name/repo-name/edit/branch-name/subdirectory-name/\n  # For example: https://github.com/jerryc127/butterfly.js.org/edit/main/source/\n  url:\n\n# Related Articles\nrelated_post:\n  enable: true\n  limit: 6 # Number of posts displayed\n  date_type: created # or created or updated 文章日期顯示創建日或者更新日\n\n# figcaption (圖片描述文字)\nphotofigcaption: false\n\n# post_pagination (分頁)\n# value: 1 || 2 || false\n# 1: The 'next post' will link to old post\n# 2: The 'next post' will link to new post\n# false: disable pagination\npost_pagination: 2\n\n# Displays outdated notice for a post (文章過期提醒)\nnoticeOutdate:\n  enable: false\n  style: flat # style: simple/flat\n  limit_day: 500 # When will it be shown\n  position: top # position: top/bottom\n  message_prev: It has been\n  message_next: days since the last update, the content of the article may be outdated.\n\n# Share System (分享功能)\n# --------------------------------------\n\n# AddThis\n# https://www.addthis.com/\naddThis:\n  enable: false\n  pubid:\n\n# Share.js\n# https://github.com/overtrue/share.js\nsharejs:\n  enable: true\n  sites: facebook,twitter,wechat,weibo,qq\n\n# AddToAny\n# https://www.addtoany.com/\naddtoany:\n  enable: false\n  item: facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link\n\n# Comments System\n# --------------------------------------\n\ncomments:\n  # Up to two comments system, the first will be shown as default\n  # Choose: Disqus/Disqusjs/Livere/Gitalk/Valine/Waline/Utterances/Facebook Comments/Twikoo/Giscus/Remark42\n  use: Waline # Valine,Disqus\n  text: true # Display the comment name next to the button\n  # lazyload: The comment system will be load when comment element enters the browser's viewport.\n  # If you set it to true, the comment count will be invalid\n  lazyload: true\n  count: true # Display comment count in post's top_img\n  card_post_count: true # Display comment count in Home Page\n\n# disqus\n# https://disqus.com/\ndisqus:\n  shortname:\n  apikey: # For newest comments widget\n\n# Alternative Disqus - Render comments with Disqus API\n# DisqusJS 評論系統，可以實現在網路審查地區載入 Disqus 評論列表，兼容原版\n# https://github.com/SukkaW/DisqusJS\ndisqusjs:\n  shortname:\n  apikey:\n  option:\n\n# livere (來必力)\n# https://www.livere.com/\nlivere:\n  uid:\n\n# gitalk\n# https://github.com/gitalk/gitalk\ngitalk:\n  client_id:\n  client_secret:\n  repo:\n  owner:\n  admin:\n  option:\n\n# valine\n# https://valine.js.org\nvaline:\n  appId: # leancloud application app id\n  appKey: # leancloud application app key\n  avatar: monsterid # gravatar style https://valine.js.org/#/avatar\n  serverURLs: # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)\n  bg: # valine background\n  visitor: false\n  option:\n\n# waline - A simple comment system with backend support fork from Valine\n# https://waline.js.org/\nwaline:\n  serverURL: https://waline-alex950808.vercel.app # Waline server address url\n  bg: /img/comment_bg.png # waline background\n  pageview: false\n  option:\n    placeholder: '你是我一生只会遇见一次的惊喜...'\n    pageSize: 8\n    lang: 'zh-CN'\n    requiredFields: ['nick','mail']\n\n# utterances\n# https://utteranc.es/\nutterances:\n  repo:\n  # Issue Mapping: pathname/url/title/og:title\n  issue_term: pathname\n  # Theme: github-light/github-dark/github-dark-orange/icy-dark/dark-blue/photon-dark\n  light_theme: github-light\n  dark_theme: photon-dark\n\n# Facebook Comments Plugin\n# https://developers.facebook.com/docs/plugins/comments/\nfacebook_comments:\n  app_id:\n  user_id: # optional\n  pageSize: 10 # The number of comments to show\n  order_by: social # social/time/reverse_time\n  lang: en_US # Language en_US/zh_CN/zh_TW and so on\n\n# Twikoo\n# https://github.com/imaegoo/twikoo\ntwikoo:\n  envId: https://twikoo-alex950808.vercel.app\n  region: ap-shanghai\n  visitor: false\n  option:\n\n# Giscus\n# https://giscus.app/\ngiscus:\n  repo:\n  repo_id:\n  category_id:\n  theme:\n    light: light\n    dark: dark\n  option:\n\n# Remark42\n# https://remark42.com/docs/configuration/frontend/\nremark42:\n  host: # Your Host URL\n  siteId: # Your Site ID\n  option:\n\n# Chat Services\n# --------------------------------------\n\n# Chat Button [recommend]\n# It will create a button in the bottom right corner of website, and hide the origin button\nchat_btn: false\n\n# The origin chat button is displayed when scrolling up, and the button is hidden when scrolling down\nchat_hide_show: false\n\n# chatra\n# https://chatra.io/\nchatra:\n  enable: false\n  id:\n\n# tidio\n# https://www.tidio.com/\ntidio:\n  enable: false\n  public_key: \n\n# daovoice\n# http://daovoice.io/\ndaovoice:\n  enable: false\n  app_id:\n\n# gitter\n# https://gitter.im/\ngitter:\n  enable: false\n  room:\n\n# crisp\n# https://crisp.chat/en/\ncrisp:\n  enable: false\n  website_id:\n\n# Footer Settings\n# --------------------------------------\nfooter:\n  owner:\n    enable: true\n    since: 2022\n  custom_text:\n  copyright: true # Copyright of theme and framework\n\n# Analysis\n# --------------------------------------\n\n# Baidu Analytics\n# https://tongji.baidu.com/web/welcome/login\nbaidu_analytics: 99e39559e4ab1a5b4398f6a406dee5a9\n\n# Google Analytics\n# https://analytics.google.com/analytics/web/\ngoogle_analytics:\n\n# CNZZ Analytics\n# https://www.umeng.com/\ncnzz_analytics:\n\n# Cloudflare Analytics\n# https://www.cloudflare.com/zh-tw/web-analytics/\ncloudflare_analytics: 690740f372c8487dbab98c4797717a1a\n\n# Microsoft Clarity\n# https://clarity.microsoft.com/\nmicrosoft_clarity:\n\n# Advertisement\n# --------------------------------------\n\n# Google Adsense (谷歌廣告)\ngoogle_adsense:\n  enable: false\n  auto_ads: true\n  js: https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\n  client:\n  enable_page_level_ads: true\n\n# Insert ads manually (手動插入廣告)\n# ad:\n#   index:\n#   aside:\n#   post:\n\n# Verification (站長驗證)\n# --------------------------------------\n\nsite_verification:\n  # - name: google-site-verification\n  #   content: xxxxxx\n  # - name: baidu-site-verification\n  #   content: xxxxxxx\n\n# Beautify/Effect (美化/效果)\n# --------------------------------------\n\n# Theme color for customize\n# Notice: color value must in double quotes like \"#000\" or may cause error!\n\n# theme_color:\n#   enable: true\n#   main: \"#49B1F5\"\n#   paginator: \"#00c4b6\"\n#   button_hover: \"#FF7242\"\n#   text_selection: \"#00c4b6\"\n#   link_color: \"#99a9bf\"\n#   meta_color: \"#858585\"\n#   hr_color: \"#A4D8FA\"\n#   code_foreground: \"#F47466\"\n#   code_background: \"rgba(27, 31, 35, .05)\"\n#   toc_color: \"#00c4b6\"\n#   blockquote_padding_color: \"#49b1f5\"\n#   blockquote_background_color: \"#49b1f5\"\n#   scrollbar_color: \"#49b1f5\"\n#   meta_theme_color_light: \"ffffff\"\n#   meta_theme_color_dark: \"#0d0d0d\"\n\n# The top_img settings of home page\n# default: top img - full screen, site info - middle (默認top_img全屏，site_info在中間)\n# The position of site info, eg: 300px/300em/300rem/10% (主頁標題距離頂部距離)\nindex_site_info_top:\n# The height of top_img, eg: 300px/300em/300rem (主頁top_img高度)\nindex_top_img_height:\n\n# The user interface setting of category and tag page (category和tag頁的UI設置)\n# index - same as Homepage UI (index 值代表 UI將與首頁的UI一樣)\n# default - same as archives UI 默認跟archives頁面UI一樣\ncategory_ui: index # 留空或 index\ntag_ui: index # 留空或 index\n\n# Website Background (設置網站背景)\n# can set it to color or image (可設置圖片 或者 顔色)\n# The formal of image: url(http://xxxxxx.com/xxx.jpg)\nbackground:\n\n# Footer Background\nfooter_bg: true\n\n# the position of bottom right button/default unit: px (右下角按鈕距離底部的距離/默認單位為px)\nrightside-bottom:\n\n# Enter transitions (開啓網頁進入效果)\nenter_transitions: true\n\n# Background effects (背景特效)\n# --------------------------------------\n\n# canvas_ribbon (靜止彩帶背景)\n# See: https://github.com/hustcc/ribbon.js\ncanvas_ribbon:\n  enable: false\n  size: 150\n  alpha: 0.6\n  zIndex: -1\n  click_to_change: false\n  mobile: false\n\n# Fluttering Ribbon (動態彩帶)\ncanvas_fluttering_ribbon:\n  enable: true\n  mobile: true\n\n# canvas_nest\n# https://github.com/hustcc/canvas-nest.js\ncanvas_nest:\n  enable: false\n  color: '0,0,255' #color of lines, default: '0,0,0'; RGB values: (R,G,B).(note: use ',' to separate.)\n  opacity: 0.7 # the opacity of line (0~1), default: 0.5.\n  zIndex: -1 # z-index property of the background, default: -1.\n  count: 99 # the number of lines, default: 99.\n  mobile: false\n\n# Typewriter Effect (打字效果)\n# https://github.com/disjukr/activate-power-mode\nactivate_power_mode:\n  enable: false\n  colorful: true # open particle animation (冒光特效)\n  shake: true #  open shake (抖動特效)\n  mobile: false\n\n# Mouse click effects: fireworks (鼠標點擊效果: 煙火特效)\nfireworks:\n  enable: true\n  zIndex: 9999 # -1 or 9999\n  mobile: true\n\n# Mouse click effects: Heart symbol (鼠標點擊效果: 愛心)\nclick_heart:\n  enable: false\n  mobile: false\n\n# Mouse click effects: words (鼠標點擊效果: 文字)\nClickShowText:\n  enable: false\n  text:\n    # - I\n    # - LOVE\n    # - YOU\n  fontSize: 15px\n  random: false\n  mobile: false\n\n# Default display mode (網站默認的顯示模式)\n# light (default) / dark\ndisplay_mode: light\n\n# Beautify (美化頁面顯示)\nbeautify:\n  enable: true\n  field: post # site/post\n  title-prefix-icon: '\\f0c1'\n  title-prefix-icon-color: '#F47466'\n\n# Global font settings\n# Don't modify the following settings unless you know how they work (非必要不要修改)\nfont:\n  global-font-size:\n  code-font-size:\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Helvetica Neue\", Lato, Roboto, \"PingFang SC\", \"Microsoft JhengHei\", \"Microsoft YaHei\", sans-serif\n  code-font-family: consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\", \"Microsoft YaHei\", sans-serif\n\n# Font settings for the site title and site subtitle\n# 左上角網站名字 主頁居中網站名字\nblog_title_font:\n  font_link: https://fonts.googleapis.com/css?family=Titillium+Web&display=swap\n  font-family: Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif\n\n# The setting of divider icon (水平分隔線圖標設置)\nhr_icon:\n  enable: true\n  icon: # the unicode value of Font Awesome icon, such as '\\3423'\n  icon-top:\n\n# the subtitle on homepage (主頁subtitle)\nsubtitle:\n  enable: true\n  # Typewriter Effect (打字效果)\n  effect: true\n  # loop (循環打字)\n  loop: true\n  # source 調用第三方服務\n  # source: false 關閉調用\n  # source: 1  調用一言網的一句話（簡體） https://hitokoto.cn/\n  # source: 2  調用一句網（簡體） http://yijuzhan.com/\n  # source: 3  調用今日詩詞（簡體） https://www.jinrishici.com/\n  # subtitle 會先顯示 source , 再顯示 sub 的內容\n  source: 3\n  # 如果關閉打字效果，subtitle 只會顯示 sub 的第一行文字\n  sub:\n\n# Loading Animation (加載動畫)\npreloader: true\n\n# aside (側邊欄)\n# --------------------------------------\n\naside:\n  enable: true\n  hide: false\n  button: true\n  mobile: true # display on mobile\n  position: right # left or right\n  display:\n    archive: true\n    tag: true\n    category: true\n  card_author:\n    enable: true\n    description:\n    button:\n      enable: true\n      icon: fab fa-github\n      text: 关注我\n      link: https://github.com/Alex950808/\n  card_announcement:\n    enable: true\n    content: 暂无公告\n  card_recent_post:\n    enable: true\n    limit: 5 # if set 0 will show all\n    sort: date # date or updated\n    sort_order: # Don't modify the setting unless you know how it works\n  card_categories:\n    enable: true\n    limit: 8 # if set 0 will show all\n    expand: none # none/true/false\n    sort_order: # Don't modify the setting unless you know how it works\n  card_tags:\n    enable: true\n    limit: 40 # if set 0 will show all\n    color: true\n    sort_order: # Don't modify the setting unless you know how it works\n  card_archives:\n    enable: true\n    type: monthly # yearly or monthly\n    format: MMMM YYYY # eg: YYYY年MM月\n    order: -1 # Sort of order. 1, asc for ascending; -1, desc for descending\n    limit: 8 # if set 0 will show all\n    sort_order: # Don't modify the setting unless you know how it works\n  card_webinfo:\n    enable: true\n    post_count: true\n    last_push_date: true\n    sort_order: # Don't modify the setting unless you know how it works\n\n# busuanzi count for PV / UV in site\n# 訪問人數\nbusuanzi:\n  site_uv: true\n  site_pv: true\n  page_pv: true\n\n# Time difference between publish date and now (網頁運行時間)\n# Formal: Month/Day/Year Time or Year/Month/Day Time\nruntimeshow:\n  enable: true\n  publish_date: 7/29/2022 00:00:00\n\n# Aside widget - Newest Comments\nnewest_comments:\n  enable: false\n  sort_order: # Don't modify the setting unless you know how it works\n  limit: 6\n  storage: 10 # unit: mins, save data to localStorage\n  avatar: true\n\n# Bottom right button (右下角按鈕)\n# --------------------------------------\n\n# Conversion between Traditional and Simplified Chinese (簡繁轉換)\ntranslate:\n  enable: true\n  # 默认按钮显示文字(网站是简体，应设置为'default: 繁')\n  default: 繁\n  #网站默认语言，1: 繁体中文, 2: 简体中文\n  defaultEncoding: 2\n  #延迟时间,若不在前, 要设定延迟翻译时间, 如100表示100ms,默认为0\n  translateDelay: 0\n  #当文字是简体时，按钮显示的文字\n  msgToTraditionalChinese: '繁'\n  #当文字是繁体时，按钮显示的文字\n  msgToSimplifiedChinese: '簡'\n\n# Read Mode (閲讀模式)\nreadmode: true\n\n# dark mode\ndarkmode:\n  enable: true\n  # Toggle Button to switch dark/light mode\n  button: true\n  # Switch dark/light mode automatically (自動切換 dark mode和 light mode)\n  # autoChangeMode: 1  Following System Settings, if the system doesn't support dark mode, it will switch dark mode between 6 pm to 6 am\n  # autoChangeMode: 2  Switch dark mode between 6 pm to 6 am\n  # autoChangeMode: false\n  autoChangeMode: false\n\n# Don't modify the following settings unless you know how they work (非必要請不要修改 )\n# Choose: readmode,translate,darkmode,hideAside,toc,chat,comment\n# Don't repeat 不要重複\nrightside_item_order:\n  enable: false\n  hide: # readmode,translate,darkmode,hideAside\n  show: # toc,chat,comment\n\n# Lightbox (圖片大圖查看模式)\n# --------------------------------------\n# You can only choose one, or neither (只能選擇一個 或者 兩個都不選)\n\n# medium-zoom\n# https://github.com/francoischalifour/medium-zoom\nmedium_zoom: false\n\n# fancybox\n# http://fancyapps.com/fancybox/3/\nfancybox: true\n\n# Tag Plugins settings (標籤外掛)\n# --------------------------------------\n\n# mermaid\n# see https://github.com/mermaid-js/mermaid\nmermaid:\n  enable: true\n  # built-in themes: default/forest/dark/neutral\n  theme:\n    light: default\n    dark: dark\n\n# Note (Bootstrap Callout)\nnote:\n  # Note tag style values:\n  #  - simple    bs-callout old alert style. Default.\n  #  - modern    bs-callout new (v2-v3) alert style.\n  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.\n  #  - disabled  disable all CSS styles import of note tag.\n  style: flat\n  icons: true\n  border_radius: 3\n  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).\n  # Offset also applied to label tag variables. This option can work with disabled note tag.\n  light_bg_offset: 0\n\n# other\n# --------------------------------------\n\n# Pjax\n# It may contain bugs and unstable, give feedback when you find the bugs.\n# https://github.com/MoOx/pjax\npjax:\n  enable: true\n  exclude:\n    - /img/\n    # - xxxx\n\n# Inject the css and script (aplayer/meting)\naplayerInject:\n  enable: true\n  per_page: true\n\n# Snackbar (Toast Notification 彈窗)\n# https://github.com/polonel/SnackBar\n# position 彈窗位置\n# 可選 top-left / top-center / top-right / bottom-left / bottom-center / bottom-right\nsnackbar:\n  enable: true\n  position: bottom-left\n  bg_light: '#49b1f5' # The background color of Toast Notification in light mode\n  bg_dark: '#1f1f1f' # The background color of Toast Notification in dark mode\n\n# https://instant.page/\n# prefetch (預加載)\ninstantpage: false\n\n# https://github.com/vinta/pangu.js\n# Insert a space between Chinese character and English character (中英文之間添加空格)\npangu:\n  enable: false\n  field: site # site/post\n\n# Lazyload (圖片懶加載)\n# https://github.com/verlok/vanilla-lazyload\nlazyload:\n  enable: true\n  field: site # site/post\n  placeholder: /img/loading.gif\n  blur: false\n\n# PWA\n# See https://github.com/JLHwung/hexo-offline\n# ---------------\n# pwa:\n#   enable: false\n#   manifest: /pwa/manifest.json\n#   apple_touch_icon: /pwa/apple-touch-icon.png\n#   favicon_32_32: /pwa/32.png\n#   favicon_16_16: /pwa/16.png\n#   mask_icon: /pwa/safari-pinned-tab.svg\n\n# Open graph meta tags\n# https://developers.facebook.com/docs/sharing/webmasters/\nOpen_Graph_meta: true\n\n# Add the vendor prefixes to ensure compatibility\ncss_prefix: true\n\n# Inject\n# Insert the code to head (before '</head>' tag) and the bottom (before '</body>' tag)\n# 插入代码到头部 </head> 之前 和 底部 </body> 之前\ninject:\n  head:\n    # - <link rel=\"stylesheet\" href=\"/xxx.css\">\n  bottom:\n    - <div class=\"aplayer no-destroy\" data-id=\"7551866625\" data-server=\"netease\" data-type=\"playlist\" data-fixed=\"true\" data-order=\"random\" data-autoplay=\"false\"> </div>\n    # - <script src=\"xxxx\"></script>\n\n# CDN\n# Don't modify the following settings unless you know how they work\n# 非必要請不要修改\nCDN:\n  # The CDN provider of internal scripts (主題內部 js 的 cdn 配置)\n  # option: local/jsdelivr/unpkg/cdnjs/custom\n  # Dev version can only choose. ( dev版的主題只能設置為 local )\n  internal_provider: local\n\n  # The CDN provider of third party scripts (第三方 js 的 cdn 配置)\n  # option: local/jsdelivr/unpkg/cdnjs/custom\n  # when set it to local, you need to install hexo-butterfly-extjs\n  third_party_provider: jsdelivr\n\n  # Add version number to CDN, true or false  \n  version: false\n\n  # Custom format\n  # For example: https://cdn.staticfile.org/${cdnjs_name}/${version}/${min_cdnjs_file}\n  custom_format:\n\n  option:\n    # main_css:\n    # main:\n    # utils:\n    # translate:\n    # local_search:\n    # algolia_js:\n    # algolia_search_v4:\n    # instantsearch_v4:\n    # pjax:\n    # gitalk:\n    # gitalk_css:\n    # blueimp_md5:\n    # valine:\n    # disqusjs:\n    # disqusjs_css:\n    # twikoo:\n    # waline_js:\n    # waline_css:\n    # sharejs:\n    # sharejs_css:\n    # mathjax:\n    # katex:\n    # katex_copytex:\n    # mermaid:\n    # canvas_ribbon:\n    # canvas_fluttering_ribbon:\n    # canvas_nest:\n    # lazyload:\n    # instantpage:\n    # typed:\n    # pangu:\n    # fancybox_css_v4:\n    # fancybox_v4:\n    # medium_zoom:\n    # snackbar_css:\n    # snackbar:\n    # activate_power_mode:\n    # fireworks:\n    # click_heart:\n    # ClickShowText:\n    # fontawesomeV6:\n    # flickr_justified_gallery_js:\n    # flickr_justified_gallery_css:\n    # aplayer_css:\n    # aplayer_js:\n    # meting_js:\n    # prismjs_js:\n    # prismjs_lineNumber_js:\n    # prismjs_autoloader:\n```\n\n### 修改hexo配置_config.yml\n```yaml\n# Hexo Configuration\n## Docs: https://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n\n# Site\ntitle: Alex0808\nsubtitle: Alex的博客\ndescription: Alex的博客\nkeywords: Blogs\nauthor: Alex0808\nlanguage: zh-CN\ntimezone: Asia/Shanghai\n\n# URL\n# hexo-8.4everland.app\n# hexo-alex950808.netlify.app\n# alex950808.gitlab.io\n# hexo-alex950808.vercel.app\n# alex0808.bitbucket.io\n# alex950808.github.io\n# hexo-alex950808.up.railway.app\n# alex950808-github-io.pages.dev\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: https://blogs.airport.tk\nroot: /\n# permalink: :year/:month/:day/:title/\n# permalink_defaults:\npermalink: posts/:abbrlink/\n\n# abbrlink config\nabbrlink:\n  alg: crc32 #support crc16(default) and crc32\n  rep: hex #support dec(default) and hex\n  drafts: false #(true)Process draft,(false)Do not process draft. false(default)\n  # Generate categories from directory-tree\n  # depth: the max_depth of directory-tree you want to generate, should > 0\n  auto_category:\n    enable: false #true(default)\n    depth: #3(default)\n    over_write: false\n  auto_title: false #enable auto title, it can auto fill the title by path\n  auto_date: false #enable auto date, it can auto fill the date by time today\n  force: false #enable force mode,in this mode, the plugin will ignore the cache, and calc the abbrlink for every post even it already had abbrlink.\n\n# Directory\nsource_dir: source\npublic_dir: public\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: downloads/code\ni18n_dir: :lang\nskip_render: \n  - README.md\n\n# Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link:\n  enable: true # Open external links in new tab\n  field: site # Apply to the whole site\n  exclude:\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: false\n  tab_replace:\n  \n# Home page setting\n# path: Root path for your blogs index page. (default = '')\n# per_page: Posts displayed per page. (0 = disable pagination)\n# order_by: Posts order. (Order by date descending by default)\nindex_generator:\n  path: ''\n  per_page: 10\n  order_by: -date\n\n# aplayer:\n#   meting: true\n#   asset_inject: false\n\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\n\n# Pagination\n## Set per_page to 0 to disable pagination\nper_page: 10\npagination_dir: page\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\n#theme: landscape\ntheme: butterfly\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  - type: git\n    repo: https://gitee.com/Alex950808/alex950808.git\n    branch: main\n  - type: git\n    repo:  https://github.com/Alex950808/alex950808.github.io.git\n    branch: main\n  - type: git\n    repo: https://gitlab.com/Alex950808/alex950808.gitlab.io.git\n    branch: master\n  - type: git\n    repo: https://Alex0808@bitbucket.org/alex0808/alex0808.bitbucket.io.git\n    branch: main\n\nsearch:\n  path: search.json\n  field: post\n  content: true\n\n# aplayer:\n#   meting: true\n#   asset_inject: false\n\nfeed:\n  type: atom\n  path: atom.xml\n  limit: 0\n\nnofollow:\n  enable: true\n  field: site\n  exclude:\n\nsitemap:\n  path: sitemap.xml\n  rel: false\n  tags: true\n  categories: true\n\nbaidusitemap:\n  path: baidusitemap.xml\n\n# Live2D\n## https://github.com/xiazeyu/live2d-widget.js\n## https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init\n## https://github.com/EYHN/hexo-helper-live2d/\nlive2d:\n  # enable: true\n  enable: false\n  # scriptFrom: local # 默认\n  # pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)\n  # pluginJsPath: lib/ # 脚本文件相对与插件根目录路径\n  # pluginModelPath: assets/ # 模型文件相对与插件根目录路径\n  scriptFrom: jsdelivr # jsdelivr CDN\n  # scriptFrom: unpkg # unpkg CDN\n  # scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url\n  tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中\n  debug: false # 调试, 是否在控制台输出日志\n  model:\n    use: https://unpkg.com/live2d-widget-model-hijiki@1.0.5/assets/hijiki.model.json\n    # use: live2d-widget-model-wanko # npm-module package name\n    # use: wanko # 博客根目录/live2d_models/ 下的目录名\n    # use: ./wives/wanko # 相对于博客根目录的路径\n    # use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url\n    scale: 1\n    hHeadPos: 0.5\n    vHeadPos: 0.618\n  display:\n    superSample: 2\n    width: 150\n    height: 300\n    position: right\n    hOffset: 0\n    vOffset: -20\n  mobile:\n    show: true\n    scale: 0.5\n  react:\n    opacityDefault: 0.7\n    opacityOnHover: 0.2\n```\n\n### 运行调试\n```bash\nhexo server -p 5000\n```\n\n### 生成静态页部署\n```bash\nhexo generate --deploy\n```\n\n| 插件                         | 解釋            |\n| ---------------------------- | ---------------- |\n| hexo-deployer-git            | Git 一键部署插件 |\n| hexo-deployer-heroku         | Heroku 一键部署插件 |\n| hexo-deployer-rsync          | Rsync 远程主机一键部署插件 |\n| hexo-deployer-openshift      | OpenShift 一键部署插件 |\n| hexo-deployer-ftpsync        | FTPSync 一键部署插件 |\n| hexo-deployer-sftp           | SFTP 远程主机一键部署插件 |\n\n\n","tags":["其他"],"categories":["其他"]}]